---
// src/components/shared/InfoCard.astro
export interface Props {
  icon?: string;
  iconType?: 'svg' | 'emoji' | 'image';
  title: string;
  description: string;
  variant?: 'default' | 'centered' | 'horizontal';
  iconColor?: string;
  class?: string;
}

const {
  icon,
  iconType = 'svg',
  title,
  description,
  variant = 'default',
  iconColor = 'text-amber-600',
  class: className = ''
} = Astro.props;

const variants = {
  default: 'flex items-start space-x-4',
  centered: 'text-center',
  horizontal: 'flex items-center space-x-4'
};

const iconClasses = `flex-shrink-0 ${iconColor}`;
---

<div class={`${variants[variant]} ${className}`}>
  
  <!-- Icon Section -->
  {icon && (
    <div class={variant === 'centered' ? 'mb-4' : iconClasses}>
      {iconType === 'emoji' ? (
        <span class="text-2xl">{icon}</span>
      ) : iconType === 'image' ? (
        <img src={icon} alt={title} class="w-8 h-8" />
      ) : iconType === 'svg' ? (
        <div class="w-8 h-8 bg-amber-600 rounded-full flex items-center justify-center">
          <Fragment set:html={icon} />
        </div>
      ) : (
        <div class="w-12 h-12 bg-amber-600 rounded-full flex items-center justify-center mx-auto">
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
      )}
    </div>
  )}
  
  <!-- Content Section -->
  <div class={variant === 'centered' ? 'text-center' : 'flex-1'}>
    <h3 class={`font-semibold text-gray-900 mb-2 ${variant === 'centered' ? 'text-lg' : 'text-base'}`}>
      {title}
    </h3>
    <p class={`text-gray-600 leading-relaxed ${variant === 'centered' ? 'text-sm' : 'text-sm'}`}>
      {description}
    </p>
    <slot />
  </div>
</div>